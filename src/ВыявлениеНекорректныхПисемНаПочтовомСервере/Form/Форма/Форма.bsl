////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ВыполнитьПроверкуНаСервере()
	
	Файл = Новый ТекстовыйДокумент;
	Файл.Прочитать(ПутьКФайлу);
	
	Попытка
		//БСП<<
		Профиль = СформироватьИнтернетПрофиль(УчетнаяЗапись);
		Почта = Новый ИнтернетПочта;
		Почта.Подключиться(Профиль);
	Исключение
		Попытка
			//БСП>>
			Профиль = ИнтернетПочтовыйПрофиль(УчетнаяЗапись, Истина);
			Почта = Новый ИнтернетПочта;
			Почта.Подключиться(Профиль);
		Исключение
			ЕстьОшибки = Истина;
			
			ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Во время подключения к учетной записи %1 произошла ошибка
			|%2'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), УчетнаяЗапись,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ТекстСообщенияОбОшибке);
			
			Возврат;
		КонецПопытки;
	КонецПопытки;
	
	ЗаголовкиПисем = Почта.ПолучитьЗаголовки();
	
	НомерСтроки = Файл.КоличествоСтрок() + 1;
	
	Для Каждого тПисьмо из ЗаголовкиПисем Цикл
		
		тСтрока = НСтр("ru = 'FAIL:::    Дата получения: '") + тПисьмо.ДатаПолучения + НСтр("ru = '    Отправитель: '") + тПисьмо.Отправитель.Адрес + НСтр("ru = '    Тема: '") + тПисьмо.Тема;
		Результат.ВставитьСтроку(1, тСтрока);
		
		Файл.ДобавитьСтроку(тСтрока);
		Файл.Записать(ПутьКФайлу);
		
		ИдЗагружать = Новый Массив;
		ИдЗагружать.Добавить(тПисьмо);
		
		Попытка
			
			Сообщение = Почта.Выбрать(Ложь, ИдЗагружать);
			Если Сообщение.Количество() = 1 Тогда
				тСтрока = СтрЗаменить(тСтрока, "FAIL", "OK");
				Результат.ЗаменитьСтроку(1, тСтрока);
				Файл.ЗаменитьСтроку(НомерСтроки, тСтрока);
			Иначе
				Результат.ВставитьСтроку(1, "");
			КонецЕсли;
			
		Исключение
			
			Результат.ВставитьСтроку(1, "");
			
		КонецПопытки;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	Почта.Отключиться();
	
КонецПроцедуры

&НаСервереБезКонтекста
//БСП <<
// По переданной ссылке на учетную запись формирует профиль почтового соединения
//
// Параметры
// УчетнаяЗапись - СправочникСсылка.УчетнаяЗаписьЭлектроннойПочты - 
//                 параметры профиля в виде соответствия
//
// Возвращаемое значение
// Почтовый профиль (тип ИнтернетПочтовыйПрофиль)
//
Функция СформироватьИнтернетПрофиль(знач УчетнаяЗапись,
                                    знач Пароль = Неопределено,
                                    знач ФормироватьSMTPПрофиль = Истина,
                                    знач ФормироватьPOP3Профиль = Истина) Экспорт
	//
	
	НастройкиСоединения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
	УчетнаяЗапись,
	"Пользователь,
	|Пароль,
	|ВремяОжидания,
	|СерверИсходящейПочтыSMTP,
	|ПортSMTP,
	|SMTPАутентификация,
	|СпособSMTPАутентификации,
	|ПользовательSMTP,
	|ПарольSMTP,
	|СерверВходящейПочтыPOP3,
	|ПортPOP3,
	|СпособPOP3Аутентификации");
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.Пользователь = НастройкиСоединения.Пользователь;
	Профиль.ВремяОжидания = НастройкиСоединения.ВремяОжидания;
	
	Если ЗначениеЗаполнено(Пароль) Тогда
		Профиль.Пароль = Пароль;
	Иначе
		Профиль.Пароль = НастройкиСоединения.Пароль;
	КонецЕсли;
	
	Если ФормироватьSMTPПрофиль Тогда
		Профиль.АдресСервераSMTP = НастройкиСоединения.СерверИсходящейПочтыSMTP;
		Профиль.ПортSMTP         = НастройкиСоединения.ПортSMTP;
		
		Если НастройкиСоединения.SMTPАутентификация = Перечисления.ВариантыSMTPАутентификации.АналогичноPOP3 Тогда
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
			Профиль.ПользовательSMTP   = НастройкиСоединения.Пользователь;
			Профиль.ПарольSMTP         = Профиль.Пароль;
		ИначеЕсли НастройкиСоединения.SMTPАутентификация = Перечисления.ВариантыSMTPАутентификации.ЗадаетсяПараметрами Тогда
			
			Если НастройкиСоединения.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.CramMD5 Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.CramMD5;
			ИначеЕсли НастройкиСоединения.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.Login Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Login;
			ИначеЕсли НастройкиСоединения.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.Plain Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Plain;
			ИначеЕсли НастройкиСоединения.СпособSMTPАутентификации = Перечисления.СпособыSMTPАутентификации.БезАутентификации Тогда
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
			Иначе
				Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
			КонецЕсли;
			
			Профиль.ПользовательSMTP = НастройкиСоединения.ПользовательSMTP;
			Профиль.ПарольSMTP       = НастройкиСоединения.ПарольSMTP;
			
		ИначеЕсли НастройкиСоединения.SMTPАутентификация = Перечисления.ВариантыSMTPАутентификации.POP3ПередSMTP Тогда
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
			Профиль.POP3ПередSMTP = Истина;
		Иначе
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		КонецЕсли;
	КонецЕсли;
	
	Если ФормироватьPOP3Профиль Тогда
		Профиль.АдресСервераPOP3 = НастройкиСоединения.СерверВходящейПочтыPOP3;
		Профиль.ПортPOP3         = НастройкиСоединения.ПортPOP3;
		
		Если НастройкиСоединения.СпособPOP3Аутентификации = Перечисления.СпособыPOP3Аутентификации.APOP Тогда
			Профиль.АутентификацияPOP3 = СпособPOP3Аутентификации.APOP;
		ИначеЕсли НастройкиСоединения.СпособPOP3Аутентификации = Перечисления.СпособыPOP3Аутентификации.CramMD5 Тогда
			Профиль.АутентификацияPOP3 = СпособPOP3Аутентификации.CramMD5;
		Иначе
			Профиль.АутентификацияPOP3 = СпособPOP3Аутентификации.Обычная;
		КонецЕсли;
	КонецЕсли;
	
	Попытка Профиль.ИспользоватьSSLPOP3 = УчетнаяЗапись.CRM_ИспользоватьSSLPOP3;
	Исключение КонецПопытки;
	Попытка Профиль.ИспользоватьSSLSMTP = УчетнаяЗапись.CRM_ИспользоватьSSLSMTP;
	Исключение КонецПопытки;
	
	Возврат Профиль;
	
КонецФункции

&НаСервереБезКонтекста
//БСП>>
// Создает профиль переданной учетной записи для подключения к почтовому серверу.
//
// Параметры:
//  УчетнаяЗапись - СправочникСсылка.УчетныеЗаписиЭлектроннойПочты - учетная запись.
//
// Возвращаемое значение:
//  ИнтернетПочтовыйПрофиль - профиль учетной записи;
//  Неопределено - не удалось получить учетную запись по ссылке.
//
Функция ИнтернетПочтовыйПрофиль(УчетнаяЗапись, ДляПолучения = Ложь) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УчетныеЗаписиЭлектроннойПочты.СерверВходящейПочты КАК АдресСервераIMAP,
	|	УчетныеЗаписиЭлектроннойПочты.ПортСервераВходящейПочты КАК ПортIMAP,
	|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьЗащищенноеСоединениеДляВходящейПочты КАК ИспользоватьSSLIMAP,
	|	УчетныеЗаписиЭлектроннойПочты.Пользователь КАК ПользовательIMAP,
	|	УчетныеЗаписиЭлектроннойПочты.Пароль КАК ПарольIMAP,
	|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьБезопасныйВходНаСерверВходящейПочты КАК ТолькоЗащищеннаяАутентификацияIMAP,
	|	УчетныеЗаписиЭлектроннойПочты.СерверВходящейПочты КАК АдресСервераPOP3,
	|	УчетныеЗаписиЭлектроннойПочты.ПортСервераВходящейПочты КАК ПортPOP3,
	|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьЗащищенноеСоединениеДляВходящейПочты КАК ИспользоватьSSLPOP3,
	|	УчетныеЗаписиЭлектроннойПочты.Пользователь КАК Пользователь,
	|	УчетныеЗаписиЭлектроннойПочты.Пароль КАК Пароль,
	|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьБезопасныйВходНаСерверВходящейПочты КАК ТолькоЗащищеннаяАутентификацияPOP3,
	|	УчетныеЗаписиЭлектроннойПочты.СерверИсходящейПочты КАК АдресСервераSMTP,
	|	УчетныеЗаписиЭлектроннойПочты.ПортСервераИсходящейПочты КАК ПортSMTP,
	|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьЗащищенноеСоединениеДляИсходящейПочты КАК ИспользоватьSSLSMTP,
	|	УчетныеЗаписиЭлектроннойПочты.ТребуетсяВходНаСерверПередОтправкой КАК POP3ПередSMTP,
	|	УчетныеЗаписиЭлектроннойПочты.ПользовательSMTP КАК ПользовательSMTP,
	|	УчетныеЗаписиЭлектроннойПочты.ПарольSMTP КАК ПарольSMTP,
	|	УчетныеЗаписиЭлектроннойПочты.ИспользоватьБезопасныйВходНаСерверИсходящейПочты КАК ТолькоЗащищеннаяАутентификацияSMTP,
	|	УчетныеЗаписиЭлектроннойПочты.ВремяОжидания КАК Таймаут,
	|	УчетныеЗаписиЭлектроннойПочты.ПротоколВходящейПочты КАК Протокол
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка = &Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", УчетнаяЗапись);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Неопределено;
	Если Выборка.Следующий() Тогда
		СписокСвойствIMAP = "АдресСервераIMAP,ПортIMAP,ИспользоватьSSLIMAP,ПользовательIMAP,ПарольIMAP,ТолькоЗащищеннаяАутентификацияIMAP";
		СписокСвойствPOP3 = "АдресСервераPOP3,ПортPOP3,ИспользоватьSSLPOP3,Пользователь,Пароль,ТолькоЗащищеннаяАутентификацияPOP3";
		СписокСвойствSMTP = "АдресСервераSMTP,ПортSMTP,ИспользоватьSSLSMTP,POP3ПередSMTP,ПользовательSMTP,ПарольSMTP,ТолькоЗащищеннаяАутентификацияSMTP";
		
		ТребуемыеСвойства = Неопределено;
		ИсключаемыеСвойства = Неопределено;
		
		Если ДляПолучения Тогда
			Если Выборка.Протокол = "IMAP" Тогда
				ТребуемыеСвойства = СписокСвойствIMAP;
			Иначе
				ТребуемыеСвойства = СписокСвойствPOP3;
			КонецЕсли;
		Иначе
			ТребуемыеСвойства = СписокСвойствSMTP;
		КонецЕсли;
		ТребуемыеСвойства = ТребуемыеСвойства + ",Таймаут";
		
		Если Выборка.POP3ПередSMTP Тогда
			ТребуемыеСвойства = Неопределено;
			ИсключаемыеСвойства = СписокСвойствIMAP;
		КонецЕсли;
		
		Результат = Новый ИнтернетПочтовыйПрофиль;
		ЗаполнитьЗначенияСвойств(Результат, Выборка, ТребуемыеСвойства, ИсключаемыеСвойства);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СобытиеЖурналаРегистрации() Экспорт
	
	Возврат НСтр("ru = 'Взаимодействия'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьДоступностьФайлаНаСервере(ПутьКФайлу)
	Файл = Новый ТекстовыйДокумент;
	Попытка
		Файл.Записать(ПутьКФайлу);
		Возврат Истина;
	Исключение
		Сообщить(НСтр("ru = 'Невозможно создать файл в указанном каталоге (проверьте, что данный каталог доступен с компьютера, на котором находится информационная база.'"));
		Возврат Ложь;
	КонецПопытки;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ФОРМОЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Результат.ВставитьСтроку(1, НСтр("ru = 'Данная обработка позволяет найти проблемные письма, вызывающие падение предприятия при получении почты.
				|Для запуска проверки необходимо указать:
				|1. Путь к файлу: выберите текстовый файл (формат .txt), в который будет сохранена информация.
				|2. Учетная запись: выберите учетную запись электронной почты, для которой необходимо произвести проверку писем.
				|
				|Если для указанной учетной записи будут найдены письма с некорректной кодировкой, то система выдаст ошибку.
				|Вам необходимо будет найти в сохраненном файле указание на письмо, которое вызвало данную ошибку и, через web-интерфейс, удалить его или попытаться изменить его кодировку.'"));
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = НСтр("ru = 'Выберите имя файла для сохранения'");
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Фильтр = НСтр("ru = 'Текстовый файл(*.txt)|*.txt'");
	
	Если Диалог.Выбрать() Тогда
		ПутьКФайлу = Диалог.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;
	
	фДоступен = ПроверитьДоступностьФайлаНаСервере(ПутьКФайлу);
	
	Если НЕ фДоступен Тогда
		ПутьКФайлу = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Элемент.ТекстРедактирования) Тогда
		Файл = Новый ТекстовыйДокумент;
		Файл.Прочитать(Элемент.ТекстРедактирования);
		Файл.Показать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверку(Команда)
	Результат.Очистить();
	Результат.ВставитьСтроку(1, НСтр("ru = '
				|
				|Данная обработка позволяет найти проблемные письма, вызывающие падение предприятия при получении почты.
				|Для запуска проверки необходимо указать:
				|1. Путь к файлу: выберите текстовый файл (формат .txt), в который будет сохранена информация.
				|2. Учетная запись: выберите учетную запись электронной почты, для которой необходимо произвести проверку писем.
				|
				|Если для указанной учетной записи будут найдены письма с некорректной кодировкой, то система выдаст ошибку.
				|Вам необходимо будет найти в сохраненном файле указание на письмо, которое вызвало данную ошибку и, через web-интерфейс, удалить его или попытаться изменить его кодировку.'"));
	//
	
	Если ЗначениеЗаполнено(ПутьКФайлу) И ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ВыполнитьПроверкуНаСервере();
	Иначе
		Сообщить(НСтр("ru = 'Заполните все поля формы.'"));
	КонецЕсли;
	
	Результат.ВставитьСтроку(1, НСтр("ru = 'Для данной учетной записи писем с ошибками кодировки найдено не было.
								|'"));
КонецПроцедуры
